{"version":3,"sources":["app/models/status.ts","app/components/delete/Delete.tsx","app/components/table/Table.tsx","app/components/dialog/Dialog.tsx","app/components/create/Create.tsx","app/hooks/useOperationsList.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StatusNames","Delete","operationId","deleteOperation","onClick","useStyles","makeStyles","table","minWidth","display","alignSelf","tableHeader","backgroundColor","OperationsTable","operations","classes","TableContainer","className","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","element","scope","name","status","RUNNING","id","CreateDialog","props","React","useState","operationName","setOperationName","handleClose","setOpen","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","value","onChange","event","target","DialogActions","Button","color","addOperation","disabled","theme","createTheme","createBtn","spacing","Create","variant","hostAddr","document","baseURI","unstable_createMuiStrictModeTheme","App","setOperations","error","setError","useEffect","eventSource","EventSource","onmessage","data","parsedData","JSON","parse","onerror","a","axios","post","message","delete","useOperationsList","ThemeProvider","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b6bd0c8.chunk.js","sourcesContent":["export enum StatusNames {\n    READY = 'Ready',\n    RUNNING = 'Running',\n    FAILED = 'Failed',\n}\n","import DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\n\ninterface IDeleteProps {\n    operationId: number;\n    deleteOperation: ((id: number) => void)\n}\n\nexport function Delete({operationId, deleteOperation}: IDeleteProps) {\n    const handleDelete = () => {\n        deleteOperation(operationId);\n    }\n\n    return (\n        <DeleteIcon onClick={handleDelete}/>\n    )\n}\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {IOperationItem} from \"../../models/operations\";\nimport {IOperationListHook} from '../../hooks/useOperationsList';\nimport {makeStyles} from '@material-ui/core';\nimport {Delete} from '../delete';\nimport {StatusNames} from '../../models/status';\n\ninterface IOperationsTableProps extends Pick<IOperationListHook, 'operations' | 'deleteOperation'> {\n}\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 600,\n        display: 'flex',\n        alignSelf: 'center'\n    },\n    tableHeader: {\n        backgroundColor: '#D3D3D3',\n    }\n});\n\n\nexport function OperationsTable({operations, deleteOperation}: IOperationsTableProps) {\n    const classes = useStyles();\n    return (\n        <TableContainer className={classes.table} component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead className={classes.tableHeader}>\n                    <TableRow>\n                        <TableCell>Operations</TableCell>\n                        <TableCell align=\"right\">Status</TableCell>\n                        <TableCell align=\"right\">Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {operations.map((element: IOperationItem) => (\n                        <TableRow key={element.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {element.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{element.status}</TableCell>\n                            <TableCell align=\"right\">\n                                {element.status === StatusNames.RUNNING ? ('N/A') :\n                                    <Delete operationId={element.id} deleteOperation={deleteOperation}/>}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React, {Dispatch, SetStateAction} from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\ninterface ICreateDialogProps {\n    open: boolean,\n    setOpen: Dispatch<SetStateAction<boolean>>,\n    addOperation: ((name: string) => void),\n}\n\n\nexport function CreateDialog(props: ICreateDialogProps) {\n    const [operationName, setOperationName] = React.useState('');\n\n\n    const handleCreate = () => {\n        props.addOperation(operationName);\n        setOperationName('');\n        props.setOpen(false);\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOperationName(event.target.value);\n    };\n\n    const handleClose = () => {\n        props.setOpen(false)\n    }\n\n    return (\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Create Operation</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter the name of operation\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Operation name\"\n                    value={operationName}\n                    onChange={handleChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleCreate} color=\"primary\" disabled={operationName === ''}>\n                    Create\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nimport {CreateDialog} from '../dialog';\nimport {IOperationListHook} from '../../hooks/useOperationsList';\nimport {createTheme, makeStyles} from '@material-ui/core';\n\ninterface ICreateProps extends Pick<IOperationListHook, 'addOperation'>{}\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles({\n    createBtn: {\n        margin: theme.spacing(3.5, 0, 3.5, 3.5),\n        alignSelf: 'flex-end'\n    }\n});\n\nexport function Create({addOperation}: ICreateProps) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    return (\n        <div className={classes.createBtn}>\n            <Button variant=\"outlined\" color=\"primary\"\n                    onClick={handleClickOpen}>\n                Create\n            </Button>\n            <CreateDialog open={open} setOpen={setOpen} addOperation={addOperation}/>\n        </div>\n    )\n}\n","import {IOperationItem} from '../models/operations';\nimport { useEffect, useState} from 'react';\nimport axios from 'axios';\n\nexport interface IOperationListHook {\n    operations: IOperationItem[],\n    error: string | null,\n    addOperation: ((name: string) => void)\n    deleteOperation: ((id: number) => void)\n}\n\nconst hostAddr = `${document.baseURI}api`;\n\nexport const useOperationsList = (): IOperationListHook => {\n    const [operations, setOperations] = useState<IOperationItem[]>([]);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const eventSource = new EventSource(`${hostAddr}/operations/sse`);\n        eventSource.onmessage = ({ data }) => {\n            const parsedData = JSON.parse(data);\n            setOperations(parsedData.operations);\n        }\n        eventSource.onerror = (() => {\n            setError('Error on connecting server');\n        })\n    }, []);\n\n    const addOperation = async (name: string) => {\n        try {\n            await axios.post(`${hostAddr}/operations`, {name})\n        }\n        catch (err) {\n            setError(err.message);\n        }\n    }\n\n    const deleteOperation = async (id: number) => {\n        try {\n            await axios.delete(`${hostAddr}/operations/${id}`)\n        }\n        catch (err) {\n            setError(err.message);\n        }\n    }\n\n    return {operations, error, addOperation, deleteOperation};\n}\n","import React from 'react';\nimport './App.css';\nimport {Create, OperationsTable} from './app/components';\nimport {useOperationsList} from './app/hooks';\nimport {ThemeProvider, unstable_createMuiStrictModeTheme} from '@material-ui/core/styles';\n\nconst theme = unstable_createMuiStrictModeTheme();\n\nfunction App() {\n    const {operations, addOperation, deleteOperation} = useOperationsList();\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <header className=\"App-header\">Simple operations table</header>\n                <div className=\"content\">\n                    <Create addOperation={addOperation}/>\n                    {operations?.length ? (\n                        <OperationsTable operations={operations} deleteOperation={deleteOperation}/>) : (\n                        <span>There is no data yet.</span>)}\n                </div>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}